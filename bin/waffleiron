#!/usr/bin/env bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && cd .. && pwd )"

_ls() {
  cd $DIR
  ls -lah ./
}

_link() {
  cd $DIR
  ln -sf wp-config-default web/cms/wp-config.php wp-config-default.php
}

clean() {
  cd $DIR
  rm -rf vendor node_modules web/cms
  find . -maxdepth 1 ! -name util ! -name index.php -name plugins/. -delete
}

rm_submodules() {
  cd $DIR
  git submodule deinit 
  git submodule | cut -c43- | while read -r line; do (git rm -f "$line"); done
  git config --local -l | grep submodule | sed -e 's/^\(submodule\.[^.]*\)\(.*\)/\1/g' | while read -r line; do (git config --local --remove-section "$line"); done
  rm -f .gitmodules
  rm -rf .git/modules
}

deploy() {
  cd $DIR
  travis encrypt-file .env --add
  clean
  composer install --no-dev
  p i
  lando push --code=none --database=dev --files=dev
  git add -A && git commit -m 'deployed from local to pantheon and github'
  git push origin master
  git push upstream master
}

_restart() {
  cd $DIR
  lando poweroff
  lando start 
}

pull() {
  cd $DIR
  lando ssh -c "rm -f /app/database.sql.gz"
  lando terminus backup:create mcwaffleiron.dev --element=db
  lando terminus backup:get mcwaffleiron.dev --element=db --to=/app/database.sql.gz
  lando db-import database.sql.gz && \
  rm -f database.sql.gz
}

_rebuild() {
  cd $DIR
  lando rebuild -y
  pull
}

install() {
  composer install
  pnpm install
}

# init function... used to be all the commands in composer.json but thats ugly dude
init() {
  center 'clean' 12 16
  clean

  center 'remove submods' 12 16
  rm_submodules

  center 'install' 12 16
  install

  center 'syms and cp' 12 16
  _links

  center 'pull' 12 16
  pull

  center 'restart' 12 16
  _restart
}

cc() {
  lando wp cache flush || lando drush cc all
}

_help() {
  echo "help       waffleiron help"
  echo "init       waffleiron init"
  echo "install    waffleiron install"
  echo "restart    waffleiron restart"
  echo "cc         waffleiron cc"
  echo "rebuild    waffleiron rebuild"
  echo "clean      waffleiron clean"
  echo "pull       waffleiron pull"
  echo "link       waffleiron link"
  echo "deploy     waffleiron deploy"
  echo "ls         waffleiron ls"
}

if [ "$#" -eq 0 ]
  then
    printf "suh? no args supplied\n"
    printf "\nwaffleiron dir:\n$DIR\n\n"
    _help
fi
#
## do your business here
for var in "$@"
do
  case "$@" in
    "help" )
      _help ;;
    "init" )
      init ;;
    "install" )
      install ;;
    "restart" )
      _restart ;;
    "cc" )
      cc ;;
    "rebuild" )
      _rebuild ;;
    "clean" )
      clean ;;
    "pull" )
      pull ;;
    "link" )
      _link ;;
    "deploy" )
      _deploy ;;
    "ls" )
      _ls ;;
    * )    
      printf "suh?\n$DIR" ;;
  esac
  shift
done
